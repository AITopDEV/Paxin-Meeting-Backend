IMG_STORE_PATH=../img-store

PORT=8000

POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_USER=paxintrade
POSTGRES_PASSWORD=<password>
POSTGRES_DB=paxintrade
DATABASE_URL=postgresql://paxintrade:<password>@postgres:5432/paxintrade?schema=public

RABBITMQ_URL=amqp://rabbitmq:5672
AMQP_URL=guest:guest@rabbitmq:5672

REDIS_URL=redis:6379

CLIENT_ORIGIN=paxintrade.com
SERVER_URL=https://paxintrade.com

TELEGRAM_CHANNEL=<id>

PGADMIN_DEFAULT_EMAIL=<email>
PGADMIN_DEFAULT_PASSWORD=<password>

TELEGRAM_TOKEN=<token>
EMAIL_FROM=info@ddrw.ru
SMTP_HOST=smtp.yandex.ru
SMTP_USER=info@ddrw.ru
SMTP_PASS=<password>
SMTP_PORT=465

ACCESS_TOKEN_PRIVATE_KEY=<token>
ACCESS_TOKEN_PUBLIC_KEY=<token>
ACCESS_TOKEN_EXPIRED_IN=1440m
ACCESS_TOKEN_MAXAGE=31536000

REFRESH_TOKEN_PRIVATE_KEY=<token>
REFRESH_TOKEN_PUBLIC_KEY=<token>
REFRESH_TOKEN_EXPIRED_IN=525960m
REFRESH_TOKEN_MAXAGE=31536000

# CENTRIFUGO_TOKEN_SECRET is used to create connection and subscription JWT.
# SECURITY WARNING: make it strong, keep it in secret, never send to the frontend!
CENTRIFUGO_TOKEN_SECRET=<secret>
# CENTRIFUGO_HTTP_API_ENDPOINT used to set Centrifugo HTTP base endpoint.
# If you are using Centrifugo outside Docker - remember to change it.
CENTRIFUGO_HTTP_API_ENDPOINT=http://centrifugo:8000
# CENTRIFUGO_HTTP_API_KEY is used for auth in Centrifugo server HTTP API.
# SECURITY WARNING: make it strong, keep it in secret!
CENTRIFUGO_HTTP_API_KEY=<api_key>
# CENTRIFUGO_BROADCAST_MODE sets the mode how to broadcast messages to Centrifugo
# in this example app.
#
# Possible options:
#
# 1. "api" - broadcast over Centrifugo HTTP API
# 2. "outbox" – use transactional outbox pattern
# 3. "cdc" – use CDC approach where Debezium reads WAL and publishes messages to Kafka.
# 4. "api_cdc" - combined mode where we send message over API but also over CDC. Since
#                we use idempotency keys here – Centrifugo drops duplicate messages. This
#                allows achieving the best latency and still reliable publications. It's
#                also totally possible to combine api with outbox (and, for example, do
#                not use LISTEN/NOTIFY trigger), but we skipped such combination here.
#
# REMEMBER to also update Centrifugo consumer configuration when switching the mode.
CENTRIFUGO_BROADCAST_MODE=api
# CENTRIFUGO_OUTBOX_PARTITIONS is the number of partitions in "outbox" broadcast mode case,
# must match Centrifigo PostgreSQL consumer configuration.
# Partitions start from 0, so if CENTRIFUGO_OUTBOX_PARTITIONS is 1, then the actual
# partition number when saving outbox event must be in range [0, 1).
CENTRIFUGO_OUTBOX_PARTITIONS=1
